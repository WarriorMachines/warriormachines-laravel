machine:
  php:
    version: 5.6.14
  services:
    - docker

checkout:
  post:
    - git clone https://github.com/WarriorMachines/omnificent.git
    - chmod u+x ./omnificent/AWS/ECS/deploy.sh

dependencies:
  pre:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS -e $DOCKER_EMAIL

    - sudo pip install --upgrade awscli && aws --version

    # Laravel configuration file.
    - echo "APP_ENV=circleci" >> ./.env
    - echo "APP_DEBUG=true" >> ./.env
    - echo "APP_KEY=$APP_KEY" >> ./.env

    - echo "DB_HOST=$DB_HOST" >> ./.env
    - echo "DB_DATABASE=circle_test" >> ./.env
    - echo "DB_USERNAME=ubuntu" >> ./.env
    - echo "DB_PASSWORD=" >> ./.env

    - cat ./.env

    # phpBB configuration file.
    - mkdir -p ./public/forums
    - echo "<?php" >> ./public/forums/config.php
    - echo "\$dbms = 'phpbb\\db\\driver\\mysqli';" >> ./public/forums/config.php
    - echo "\$dbhost = '$DB_HOST';" >> ./public/forums/config.php
    - echo "\$dbname = 'circle_test';" >> ./public/forums/config.php
    - echo "\$dbuser = 'ubuntu';" >> ./public/forums/config.php
    - echo "\$dbpasswd = '';" >> ./public/forums/config.php
    - echo "\$table_prefix = 'phpbb_';" >> ./public/forums/config.php
    - echo "\$phpbb_adm_relative_path = 'adm/';" >> ./public/forums/config.php
    - echo "\$acm_type = 'phpbb\\cache\\driver\\file';" >> ./public/forums/config.php
    - echo "@define('PHPBB_INSTALLED', true);" >> ./public/forums/config.php
    - echo "@define('DEBUG', true);" >> ./public/forums/config.php

    - cat ./public/forums/config.php

    - sudo sed --in-place '/bind-address/d' /etc/mysql/my.cnf
    - echo "GRANT ALL PRIVILEGES ON *.* TO 'ubuntu'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;" > query.sql
    - mysql -u ubuntu circle_test < query.sql
    - rm query.sql
    - sudo service mysql restart

  post:
    - bower install
    - ./node_modules/.bin/gulp --production

test:
  pre:
    - docker build --tag="warriormachines/warriormachines-laravel:v$CIRCLE_BUILD_NUM" ./
    - docker build --tag="warriormachines/warriormachines-laravel:latest" ./

    - docker pull warriormachines/warriormachines-phpbb:latest
    - docker pull warriormachines/warriormachines-php-fpm:latest
    - docker pull warriormachines/warriormachines-nginx:latest

    - docker run -d --name="WarriorMachinesPhpBb" -v "$(pwd)"/public/forums/config.php:/var/www/html/public/forums/config.php warriormachines/warriormachines-phpbb:latest
    - docker run -d --name="WarriorMachinesLaravel" -v "$(pwd)"/.env:/var/www/html/.env --volumes-from WarriorMachinesPhpBb warriormachines/warriormachines-laravel:v$CIRCLE_BUILD_NUM
    - docker run -d --name="WarriorMachinesPhpFpm" --volumes-from WarriorMachinesLaravel  warriormachines/warriormachines-php-fpm:latest
    - docker run -d --name="WarriorMachinesNginx" -p 80:80 --volumes-from WarriorMachinesLaravel --link="WarriorMachinesPhpFpm:WarriorMachinesPhpFpm" warriormachines/warriormachines-nginx:latest

    - php artisan migrate
    - php artisan db:seed

  post:
    # To connect to the database on the host from inside a container, this command tells us the IP the host is available through. (ie. 172.17.42.1)
    - sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' WarriorMachinesLaravel)" -- bash -c "/sbin/ip route|awk '/default/ { print $3 }'"

    - docker images
    - docker ps -a

    - curl --retry 2 --retry-delay 2 -v http://localhost:80/health-check
    - curl --retry 2 --retry-delay 2 -v http://localhost:80/forums/index.php

    - docker logs WarriorMachinesPhpBb
    - docker logs WarriorMachinesLaravel
    - docker logs WarriorMachinesPhpFpm
    - docker logs WarriorMachinesNginx

# Note: Deployment commands are triggered only after a successful (green) build.
deployment:
  staging:
    branch: [dev]
    commands:
      - docker push warriormachines/warriormachines-laravel:v$CIRCLE_BUILD_NUM
      - docker push warriormachines/warriormachines-laravel:latest-dev

      - ./omnificent/AWS/ECS/deploy.sh v$CIRCLE_BUILD_NUM web-staging-cluster us-west-2 warriormachines-laravel-staging-service ./omnificent/AWS/ECS/task-definitions/warriormachines-laravel/warriormachines-laravel-staging-task-definition.json warriormachines-laravel-staging-task-definition warriormachines-laravel-staging-task-definition

  production:
    branch: [master]
    commands:
      - docker push warriormachines/warriormachines-laravel:v$CIRCLE_BUILD_NUM
      - docker push warriormachines/warriormachines-laravel:latest

      - ./omnificent/AWS/ECS/deploy.sh v$CIRCLE_BUILD_NUM web-production-cluster us-west-2 warriormachines-laravel-production-service ./omnificent/AWS/ECS/task-definitions/warriormachines-laravel/warriormachines-laravel-production-task-definition.json warriormachines-laravel-production-task-definition warriormachines-laravel-production-task-definition
